<?php
# vim: ft=php
# This file was automatically generated by the MediaWiki 1.40.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "{{ mediawiki_sitename | mandatory }}";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://{{ mediawiki_domain | mandatory }}";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x'   => "$wgResourceBasePath/skins/resources/assets/change-your-logo.svg",
	'icon' => "$wgResourceBasePath/skins/resources/assets/change-your-logo-icon.svg",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "{{ mediawiki_email | mandatory }}";
$wgPasswordSender = "{{ mediawiki_email | mandatory }}";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype =     "mysql";
$wgDBserver =   "db";
$wgDBname =     "{{ mediawiki_db_name | mandatory }}";
$wgDBuser =     "{{ mediawiki_db_user | mandatory }}";
$wgDBpassword = "{{ mediawiki_db_pass | mandatory }}";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUploadDirectory = "$wgResourceBasePath/images";
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "{{ mediawiki_secret_key | mandatory }}";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "{{ mediawiki_upgrade_key | mandatory }}";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "{{ mediawiki_default_skin | mandatory }}";

$wgShowExceptionDetails = true;
$wgShowDBErrorBacktrace = true;

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'Vector' );

# Enable extensions.
{% for extension in mediawiki_extensions %}
wfLoadExtension( '{{ extension.name }}' );
{% endfor %}

# Enable OAUth for users.
$wgGroupPermissions['user']['oathauth-enable'] = true;

# Accept client IPs from X-Forwarded-For
$wgUsePrivateIPs = true;
$wgCdnServersNoPurge = [];
{% for proxy_addr in mediawiki_trusted_proxies %}
$wgCdnServersNoPurge[] = '{{ proxy_addr }}';
{% endfor %}

{% if mediawiki_smtp_enabled %}
# SMTP Configuration
$wgSMTP = [
	'IDHost'    => '{{ mediawiki_domain | mandatory }}',
	'localhost' => '{{ mediawiki_domain | mandatory }}',
	'host'      => '{{ mediawiki_smtp_host | mandatory }}',
	'port'      => {{ mediawiki_smtp_port | mandatory }},
	'username'  => '{{ mediawiki_smtp_user | mandatory }}',
	'password'  => '{{ mediawiki_smtp_password | mandatory }}',
	'auth'      => true,
];

{% endif %}
# End of automatically generated settings.
# Add more configuration options below.
$wgArticlePath = "/wiki/$1";
$wgUsePathInfo = true;
{% if mediawiki_debug %}

# Enable debug logging
$wgShowDebug = true;
$wgDebugDumpSql = true;

error_reporting( -1 );
ini_set( 'display_errors', 1 );

if ( !defined( 'STDERR' ) ) {
	define( 'STDERR', fopen( 'php://stderr', 'w' ) );
}

if ( !isset( $maintClass ) || ( isset( $maintClass ) && $maintClass !== 'PHPUnitMaintClass' ) ) {
	$wgMWLoggerDefaultSpi = [
		'class' => \MediaWiki\Logger\ConsoleSpi::class,
	];
}
{% endif %}
